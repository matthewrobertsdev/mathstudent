{"version":3,"sources":["utilities/NameCodePair.js","model/mathteachers lazy /^/.//.*Teacher$/ groupOptions: {} namespace object","components/about-views lazy /^/.//About.*$/ groupOptions: {} namespace object","store/AuthReducer.js","components/Header.js","components/ScrollToTop.js","styles/Styles.js","components/LastCheckedVersionView.js","components/TellVersionView.js","pages/VersionPage.js","pages/HomePage.js","components/links/TeachingLink.js","components/teaching-views/TeachingsOverview.js","components/teaching-views/CourseOverview.js","pages/CurriculumPage.js","pages/PageNotFoundPage.js","components/teaching-views/MethodView.js","components/teaching-views/ProblemEntryView.js","components/teaching-views/BackToTeachingView.js","components/AdView.js","store/Actions.js","pages/EnterProblemsPage.js","components/teaching-views/ProblemGenerationView.js","components/teaching-views/UncreatedTeachingView.js","pages/GenerateProblemsPage.js","components/teaching-views/ProblemPicker.js","components/teaching-views/TableOfContentsView.js","components/teaching-views/TOCAccordianItem.js","pages/TeachingPage.js","components/teaching-views/LessonView.js","components/teaching-views/SolveView.js","pages/SolvePage.js","components/teaching-views/TeachView.js","pages/MethodPage.js","components/teaching-views/TeachingRecentView.js","components/teaching-views/MethodRecentView.js","components/teaching-views/ProblemRecentView.js","pages/RecentsPage.js","components/LoginView.js","pages/LoginPage.js","pages/SignUpPage.js","pages/FirstTimeUserLoginPage.js","pages/GoodByePage.js","AppRouter.js","model/Teachings.js","store/TeachingReducer.js","model/Curriculum.js","model/Course.js","store/AppReducer.js","store/TeachingsStore.js","App.js","index.js"],"names":["NameCodePair","displayName","codeName","this","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","authSlice","createSlice","name","initialState","jwt","localStorage","getItem","email","reducers","storeJWT","state","action","console","log","payload","setItem","clearJWT","storeEmail","clearEmail","actions","withRouter","useSelector","auth","location","useLocation","dispatch","useDispatch","className","getClassNameLeft","to","key","undefined","getClassNameRight","onClick","url","window","pathname","ScrollToTop","useEffect","scrollTo","mainHeading","LastCheckedVersionView","lastChecked","TellVersionView","lastUpdated","VersionPage","document","title","HomePage","TopicView","props","type","topic","TeachingsOverview","topics","index","i","TeachingLink","CourseOverview","course","CurrciulumPage","curriculum","teaching","PageNotFoundPage","MethodView","initialText","method","length","toString","useState","text","setText","paramsState","setParamsState","params","_","htmlFor","value","onChange","event","target","from","teacher","objectName","replace","getURL","tabIndex","ProblemEntryView","number","BackToTeachingView","displayNameSingular","AdView","getTeacher","teachingName","callback","default","catch","error","EnterProblemsPage","match","setTeacher","allowZeroExpanded","allowMultipleExpanded","methods","ProblemGenerationView","defaultValue","min","UncreatedTeachingView","GenerateProblemsPage","ProblemPicker","TableOfContentsView","TOCAccordianItem","uuid","TeachingPage","fetch","headers","body","JSON","stringify","res","json","data","err","AboutComponent","React","lazy","displayNamePlural","preExpanded","fallback","LessonView","methodName","forEach","getMethodName","teachingDisplay","lesson","j","push","handleSegment","teachLesson","createSolveView","segment","startsWith","slice","math","split","aria-label","Provider","input","Node","inline","aria-hidden","formula","SolveView","setLesson","goodInput","parameters","unescapedArgs","escapedArgs","SolvePage","createBackLink","createSpacer","MethodPage","getMethodIndex","TeachView","find","findIndex","TeachingRecentView","href","MethodRecentView","problemStrings","arguments","RecentsPage","loggedIn","setLoggedIn","recents","setRecents","pages","recent","ProblemRecentView","LoginView","history","useHistory","setEmail","password","setPassword","alert","LoginPage","SignUpPage","confirmPassword","setConfirmPassword","emailTaken","FirstTimeUserLoginPage","GoodByePage","AppRouter","path","exact","component","CurriculumPage","teachings","pageNotFound","combineReducers","mainStore","createStore","AppReducer","applyMiddleware","thunk","App","store","teachingStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23ddd512.chunk.js","sourcesContent":["class NameCodePair {\n    constructor(displayName, codeName){ this.displayName = displayName; this.codeName = codeName; }\n  }\nexport default NameCodePair;","var map = {\n\t\"./FractionTeacher\": [\n\t\t52,\n\t\t5\n\t],\n\t\"./LineIn2DTeacher\": [\n\t\t53,\n\t\t4\n\t],\n\t\"./MathTeacher\": [\n\t\t51,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 43;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AboutFraction\": [\n\t\t32,\n\t\t0\n\t],\n\t\"./AboutFraction.js\": [\n\t\t32,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 44;\nmodule.exports = webpackAsyncContext;","import { createSlice } from '@reduxjs/toolkit'\n\n//for jwt and email using redux toolkit\nconst authSlice=createSlice({\n  name: 'auth',\n  initialState: {jwt: localStorage.getItem('jwt'), email: localStorage.getItem('email')},\n  reducers:{\n    storeJWT(state, action){\n      console.log('storing jwt')\n      state.jwt=action.payload\n      localStorage.setItem('jwt', action.payload)\n    },\n    clearJWT(state, action){\n      console.log('clearing jwt')\n      state.jwt=null\n      localStorage.setItem('jwt', null)\n    },\n    storeEmail(state, action){\n      state.email=action.payload\n      localStorage.setItem('email', action.payload)\n    },\n    clearEmail(state, action){\n      state.email=null\n      localStorage.setItem('email', null)\n    },\n  }\n})\n\nexport const {storeJWT, clearJWT, storeEmail, clearEmail}=authSlice.actions\n\nexport default authSlice.reducer","import React from 'react';\nimport { withRouter, Link, useLocation } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {clearJWT, clearEmail} from '../store/AuthReducer'\n\n//Header at top of each page with links to all main pages\nconst Header = () => {\n  let jwt=useSelector(state=>state.auth.jwt)\n  let location = useLocation();\n  let dispatch=useDispatch()\n  return (\n    <header>\n      <nav className=\"nav-bar\">\n        {/* Home page */}\n        <Link className={getClassNameLeft('/')}\n          to='/' key={0}>\n          Math Student\n      </Link>\n        {/* Curriculum page */}\n        <Link className={getClassNameLeft('/curriculum')}\n          to='/curriculum' key={2}>\n          Curriculum\n      </Link>\n        {/* Cached version info page */}\n        <Link className={getClassNameLeft('/version')}\n          to='/version' key={3}>\n          Version\n      </Link>\n      <Link className={getClassNameLeft('/recents')}\n          to='/recents' key={4}>\n          Recents\n      </Link>\n        {getLogInOrOut()}\n      </nav>\n    </header>\n  );\n\n  function getLogInOrOut(){\n    if (jwt==='undefined'||jwt===undefined||jwt==='null'||jwt==null){\n      /* Login page */\n      return (\n      <Link className={getClassNameRight('/login')}\n      to='/login' key={5}>\n      Login\n  </Link>\n      )\n    }\n    else {\n      return (\n        <Link onClick={()=>{\n          dispatch(clearJWT())\n          dispatch(clearEmail())\n        }} className='nav-link float-right'\n        to='/logout' key={5}>\n        Logout\n    </Link>\n        )\n    }\n  }\n\n  //selected or unslected css style that floats left\n  function getClassNameLeft(url) {\n    console.log(window.location.pathname)\n    console.log(location.pathname)\n    if (url === location.pathname) {\n      return 'selected-nav-link float-left';\n    } else {\n      return 'nav-link float-left';\n    }\n  }\n  \n  //selected or unslected css style that floats right\n  function getClassNameRight(url) {\n    if (url === location.pathname) {\n      return 'selected-nav-link float-right';\n    } else {\n      return 'nav-link float-right';\n    }\n  }\n}\nexport default withRouter(Header);","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n//scrolls to top on page load\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  //no view\n  return null;\n}\nexport default ScrollToTop","export const mainHeading = \"center-text heading large-heading-size\";","import React from 'react';\n\n//tells when last update was found\nconst LastCheckedVersionView = () => {\n  //stored in local storage\n  let lastChecked = localStorage.getItem('lastChecked');\n  //if found\n  if (lastChecked) {\n    return (\n    //tells date last update was found\n    <h1 className=\"center-text large-heading-size\">\n      Update found on {lastChecked}.\n    </h1>\n    )\n  } else {\n    return null\n  }\n}\nexport default LastCheckedVersionView","import React from 'react';\n\n//tells latest version that was cached\nconst TellVersionView = () => {\n  //gets date from local storage\n  let lastUpdated = localStorage.getItem('lastUpdated');\n  //if found, tells latest cached version\n  if (lastUpdated) {\n    return (\n    <h1 className=\"center-text large-heading-size\">\n      Latest Cached Version: {lastUpdated}.\n    </h1>\n    )\n  } else {\n    //otherwise, tells that no cached version was found\n    return (\n    <h1 className=\"center-text large-heading-size\">\n      No version fully cached yet.\n    </h1>\n    )\n  }\n}\nexport default TellVersionView","import React, { useEffect } from 'react';\nimport { mainHeading } from '../styles/Styles'\nimport LastCheckedVersionView from '../components/LastCheckedVersionView'\nimport TellVersionView from '../components/TellVersionView'\n//tells status of cached version (It's a Progressive Web App)\nconst VersionPage = () => {\n  //update page title on navigation to page\n  useEffect(() => { document.title = \"Version\" })\n  return (\n    <main className=\"center-text\">\n      {/*Tells if updates have been found*/}\n      <LastCheckedVersionView />\n      {/*Tells what, if any, update has been cached*/}\n      <TellVersionView />\n      {/*Explanation of how to check for an update*/}\n      <h1 className={mainHeading}>\n        Reload the page to see if a new update has been found.</h1>\n      {/*Explanation of how to use the latest cached update*/}\n      <h1 className={mainHeading}>\n        Latest cached version only runs if you have closed every single page in your browser that has Math Teacher,\n        so that none were open so that the new version could be launched when you next opened a Math Teacher page.\n      </h1>\n    </main>\n  )\n}\nexport default VersionPage;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n//a description of the app.\nconst HomePage = () => {\n  //set page title on navigation to page\n  useEffect(() => { document.title = \"Math Student\" })\n  return (\n    <main className=\"text-margins\">\n      {/* declaration of purpose */}\n      <h1 className=\"large-heading-size center-text\">\n        Math Student is a website dedicated to helping you learn math,\n        and teaching you math, all for free.\n      </h1>\n      {/* explanation of features */}\n      <h2>\n        You can enter a problem to solve or let Math Student's programtic Math Teachers generate problems for you.\n        Then, solve it, check your answer, or even let the Math Teachers teach you how to solve\n        the problem you are working on.\n      </h2>\n      <hr/>\n      {/* how we make money */}\n      <h2>\n        Math Student makes money off advertsing when you are online,\n        but, if you do not have internet available, many of our features--those that don't\n        require login--are available while you are offline, provided you have let Math Teacher\n        fully load one time with internet.  To access your past questions and results, you need\n        to login and have internet available as it requires your web browser to communicate\n        with our servers.\n      </h2>\n      <hr></hr>\n      {/* create account heading */}\n      <h1 className=\"large-heading-size center-text\">\n        Create an Account\n      </h1>\n      {/* explanation of account features */}\n      <h2>\n        To let Math Student save what problems you have completed\n        so that you may refer back to them and view your progress,\n        please create an account:\n      </h2>\n      {/* create account link */}\n      <div className=\"center-text\">\n        <Link to=\"/createAccount\" className=\"link\">\n          Create Account\n        </Link>\n      </div>\n      {/* spacing at bottom */}\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n    </main>\n  );\n}\nexport default HomePage","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst TopicView = (props) => {\n  return (\n    <div>\n      <Link className=\"link\" to={`/${props.type}/${props.topic.codeName}`}>\n        {props.topic.displayName}\n      </Link>\n    </div>\n  );\n}\nexport default TopicView;","import React from 'react';\nimport TeachingLink from '../links/TeachingLink'\n\n//create a series of TeachingLinks based on topics passed in\nconst TeachingsOverview = (props) => {\n  //if topics is null return null\n  if (props.topics == null) {\n    return null;\n  }\n  //else return series of TeachingLinks\n  return props.topics.map((topic, index) => {\n    return (\n      <div key={index} i={index}>\n        {/* create TeachingLink from topic */}\n        <TeachingLink topic={topic} type={props.type}></TeachingLink>\n        <br></br>\n      </div>\n    );\n  });\n}\nexport default TeachingsOverview;","import React from 'react';\nimport TeachingsOverview from './TeachingsOverview'\n\n//displays course name and TeachingOverview with links to topics\nconst CourseOverview = (props) => {\n  return (\n    <span>\n      {/* course name in heading */}\n      <h1 className=\"heading-text-size\">\n        {props.course.name}\n      </h1>\n      {/* all topics in course as links */}\n      <TeachingsOverview topics={props.course.topics} type={props.type}/>\n    </span>\n  )\n}\nexport default CourseOverview","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport CourseOverview from '../components/teaching-views/CourseOverview'\nimport '../styles/app.css'\n//shows courses in sections\n//courses have a title, and a list of topics\nconst CurrciulumPage = (props) => {\n  //update page title on navigation to page\n  useEffect(() => { document.title = \"Curriculum\" })\n  //get the curriculum (courses)\n  const curriculum = useSelector(state => state.teaching.curriculum)\n  //if curriculm isn't updated from store yet, return null\n  if (curriculum == null) {\n    return null\n  } else {\n    return (\n      //else create the course views\n      <main className='subject-view'>\n        {/*create course GUIs*/}\n        {curriculum.map((course, index) => {\n          return (\n            <div key={index}>\n              {/*create CourseOverview*/}\n              <CourseOverview course={course} type='teachings' />\n              <br></br>\n            </div>\n          );\n        })}\n      </main>\n    );\n  }\n}\nexport default CurrciulumPage;","import React, { useEffect } from 'react';\n//present this page if a page is not found\nconst PageNotFoundPage = () => {\n  //set title on navigation to page\n  useEffect(() => { document.title = \"Not Found\" })\n  return (\n    <main>\n      {/* heading tells that page cannot be found*/}\n      <h1 className=\"center-text text-margins large-heading-size\">\n        Sorry, but the page you are looking for cannot be found.\n      </h1>\n    </main>)\n}\nexport default PageNotFoundPage","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n//can enter a problem\nconst MethodView = (props) => {\n\n  //initial state for inputs\n  let initialText = {}\n\n  for (let index = 2; index < props.method.length; index++) {\n    if (index % 2 === 1) {\n      initialText[index.toString()] = \"\"\n    }\n  }\n  //setText from useState hook\n  const [text, setText] = useState(initialText);\n\n  const [paramsState, setParamsState]=useState(null)\n  \n  useEffect( () => {\n    if (props.params!==paramsState){\n      setParamsState(props.params)\n      setText(initialText)\n    }\n  }, [props.params, paramsState, initialText] )\n\n  if (props.method == null) {\n    return null;\n  }\n  return (\n    <div className='large-margins'>\n      {props.method.map((_, index) => {\n        if (index < 2) {\n          return null\n        }\n        //labels for the inputs\n        else if (index % 2 === 0) {\n          return (\n            <label htmlFor={props.method[0] + \"-\" + props.method[index]}\n              className='heading medium-line-height label small-right-margin'\n              key={props.method[0] + \"-\" + props.method[index] + 'label'}>\n              {props.method[index]}:\n            </label>\n          )\n        } else {\n          //the inputs--controlled components\n          return (\n            <span key={props.method[0] + \"-\" + props.method[index - 1] + 'input-and-span'}\n            className='large-right-margin'>\n              <input id={props.method[0] + \"-\" + props.method[index - 1]}\n                key={props.method[0] + \"-\" + props.method[index - 1] + 'input'}\n                 value={text[index.toString()]} onChange={\n                  (event) => {\n                    setText({\n                      ...text,\n                      [index.toString()]: event.target.value\n                    });\n                  }\n                } />\n            </span>\n          )\n        }\n      })}\n      {/*solve button links to next page*/}\n      <Link to={{pathname: getURL(), state: {from: props.from}}}\n        className='create-button' tabIndex={0}>\n        Solve\n      </Link>\n    </div>\n  )\n  function getURL() {\n    let url=''\n    if (props.from==='teachings'){\n      url+='../../teachings/'\n    } else if (props.from==='EnterProblemsPage') {\n      url+='../solve/'\n    }\n    url+=props.teacher.teaching.objectName+\"/\"\n    url +=props.method[1]+\"/\"\n    for (let index = 2; index < props.method.length; index++) {\n      if (index % 2 === 0) {\n        url += \"@\" + props.method[index].replace(\" \", \"-\")\n      } else {\n        url += \"@\" + text[index.toString()]\n      }\n    }\n    return url\n  }\n}\nexport default MethodView","import React from 'react';\nimport {\n  AccordionItem, AccordionItemButton, AccordionItemHeading,\n  AccordionItemPanel\n} from 'react-accessible-accordion'\nimport MethodView from './MethodView'\n\n//accordian that contains method view for entering a problem\nconst ProblemEntryView = (props) => {\n  if (props.method === undefined) {\n    return null;\n  }\n  return (\n    <span>\n      <AccordionItem>\n        <AccordionItemHeading className=\"heading-type-2\">\n          <AccordionItemButton>\n            {/* method name */}\n            {props.number + ') ' + props.method[0]}\n          </AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          {/* actually let's you enter the problem for the method and link to SolvePage */}\n          <MethodView method={props.method} teacher={props.teacher} from='EnterProblemsPage'/>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </span>\n  )\n}\nexport default ProblemEntryView","import React from 'react';\nimport { Link } from 'react-router-dom';\n//back to main teaching page link\nconst BackToTeachingView = (props) => {\n  return (\n  <h1 className='large-left-margin'>\n    <Link to={'/teachings/'+props.teacher.teaching.objectName} className='link-heading'>\n      {'Go to '+props.teacher.teaching.displayNameSingular+'\\'s Page'}\n    </Link>\n  </h1>\n  );\n}\nexport default BackToTeachingView","import React from 'react';\n//displays an ad when the user is online.  Two sizes: leader-board banner \n//for large and small-mobile banner for small\nconst AdView = () => {\n  return (\n    /* leader board ad or mobile banner */\n    <div className='ad center-text'>\n      <br />\n\t\t    There is an ad here when you are online.\n      <br />\n        Ads help Math Teacher make money.\n      <br />\n      <br />\n    </div>\n  );\n}\nexport default AdView;","/*\nexport const setTeacher = (teachingName) => {\n\treturn (dispatch) => {\n\t\treturn import(`../model/mathteachers/${teachingName}Teacher`).then(\n\t\t\tteaching => {\n\t\t\t\tconsole.log(teaching.default)\n\t\t\t\tdispatch({ type: \"SET_TEACHER\", payload: teaching.default });\n\t\t\t}).catch(\n\t\t\t\tfunction (error) {\n\t\t\t\t\tconsole.log(error); dispatch(\n\t\t\t\t\t\t{ type: \"SET_TEACHER\", payload: undefined })\n\t\t\t\t});\n\t};\n};\n*/\n\nexport const getTeacher = (teachingName, callback) => {\n  import(`../model/mathteachers/${teachingName}Teacher`).then(\n    teacher => {\n      callback(teacher.default)\n    }).catch(\n      function (error) {\n        callback(false)\n      });\n};","import React, { useState } from 'react';\nimport ProblemEntryView from '../components/teaching-views/ProblemEntryView';\nimport { Accordion } from 'react-accessible-accordion'\nimport BackToTeachingView from '../components/teaching-views/BackToTeachingView'\nimport AdView from '../components/AdView';\nimport { getTeacher } from '../store/Actions';\n// a page for entering problems based on the methods\nconst EnterProblemsPage = (props) => {\n  const { match: { params } } = props;\n  document.title = `Enter ${params.teachingName} Problems`\n  //state\n  const [teacher, setTeacher] = useState(undefined);\n  getTeacher(params.teachingName, setTeacher)\n  if (teacher) {\n    return (\n      <main>\n        <Accordion allowZeroExpanded={true} allowMultipleExpanded={true}>\n          <BackToTeachingView teacher={teacher} />\n          <div className='center-text text-margins'><AdView /></div>\n          <h1 className='large-left-margin'>\n            Enter {teacher.teaching.displayNameSingular} Problems\n          </h1>\n          {/* one ProblemEntryView for each of the teacher's teaching's methods */}\n          {teacher.teaching.methods.map((method, index) => {\n            return (\n              <ProblemEntryView method={method} key={index} number={index + 1} teacher={teacher}/>\n            );\n          })}\n        </Accordion>\n      </main>\n    )\n  } else if (teacher === undefined) {\n    return null\n  }\n}\nexport default EnterProblemsPage","import React from 'react';\n\n//for generating a problem for a method\n//incomplete\nconst ProblemGenerationView = (props) => {\n  if (props.method == null) {\n    return null;\n  }\n  return (\n    <div className='center-text'>\n      <h1 className='h1-2'>{props.number+') '+props.method[0]}:</h1>\n      <label className='heading' htmlFor={props.method[0]}>\n        Quantity:\n      </label>\n      <input id={props.method[0]} defaultValue={0} min={0} type='number' \n      className='small-left-margin'/>\n    </div>\n  )\n}\nexport default ProblemGenerationView","import React from 'react';\n\n//component to tell that a teaching was not found\nconst UncreatedTeachingView = () => {\n  //change page title\n  document.title = \"Not Found\"\n  return (\n    <div>\n      <br />\n      <h1 className='heading-size text-margins'>\n        Sorry, but the teaching you are looking for cannot be found.\n        </h1>\n    </div>\n  )\n}\nexport default UncreatedTeachingView;","import React, { useState } from 'react';\nimport { Accordion } from 'react-accessible-accordion'\nimport { Link } from 'react-router-dom';\nimport AdView from '../components/AdView';\nimport BackToTeachingView from '../components/teaching-views/BackToTeachingView'\nimport ProblemGenerationView from '../components/teaching-views/ProblemGenerationView';\nimport UncreatedTeachingView from '../components/teaching-views/UncreatedTeachingView';\nimport { getTeacher } from '../store/Actions';\n// genrate a problem set for the entire topic or for individual subtopics\nconst GenerateProblemsPage = (props) => {\n  const { match: { params } } = props;\n  document.title = `Generate ${params.teachingName} Problems`\n  //state\n  const [teacher, setTeacher] = useState(false);\n  getTeacher(params.teachingName, setTeacher)\n  if (teacher) {\n    return (\n      <main>\n        <Accordion allowZeroExpanded={true} allowMultipleExpanded={true}>\n          <BackToTeachingView teacher={teacher} />\n          <div className='center-text text-margins'>\n            <AdView />\n          </div>\n          <h1 className='large-left-margin'>\n            Generate {teacher.teaching.displayNameSingular} Problems:\n          </h1>\n          <div className='center-text'>\n          <Link to=\"/\" className=\"link\">\n              Generate Problem Set\n          </Link>\n          </div>\n          <h1 className='large-left-margin'>Select Your Problems:</h1>\n          <div className='center-text'>\n            <Link to=\"/\" className=\"link\">\n              Generate Problems from Selection\n          </Link>\n          </div>\n          {/* one ProblemGenerationView for every method in teacher's teaching */}\n          {teacher.teaching.methods.map((method, index) => {\n            return (\n              <ProblemGenerationView method={method} key={index} number={index + 1} />\n            )\n          })}\n          <br></br>\n          <br></br>\n          <br></br>\n        </Accordion>\n      </main>\n    )\n  } else if (teacher===false){\n    //if teacher can't be retreived\n    return <UncreatedTeachingView/>\n  }\n}\nexport default GenerateProblemsPage","import React from 'react';\nimport { Link } from 'react-router-dom'\n//just provides initial links to enter a problem page or generate problems page\nconst ProblemPicker = (props) => {\n  return (\n    <div className='full-width center-text'>\n      <Link className='link center-text' to={`/EnterProblems/${props.teachingName}`}>\n        Enter Problem\n      </Link>\n      <br/>\n      <br/>\n      <Link className='link center-text' to={`/GenerateProblems/${props.teachingName}`}>\n        Generate Problems\n      </Link>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n    </div>);\n}\nexport default ProblemPicker","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n//all method teachings for this topic\nconst TableOfContentsView = (props) => {\n  return (\n    //ordered list for methods for table of contents\n    <ol className='large-left-margin'>\n    {props.methods.map( (method, index) => {\n      return (\n        <li className='link-heading' key={index}>\n          <Link className='link-heading' to={`/teachings/${props.teachingName}/${method[1]}`}>\n          {method[0]}\n          </Link>\n          {/* line breaks */}\n          <br/>\n          <br/>\n        </li>\n        )\n    })}\n    </ol>\n  )\n}\nexport default TableOfContentsView","import React from 'react';\nimport {AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from 'react-accessible-accordion'\nimport AdView from '../../components/AdView';\nimport TableOfContentsView from '../../components/teaching-views/TableOfContentsView'\nimport '../../styles/app.css'\n\nconst TOCAccordianItem = (props) => {\n  return (\n    <span>\n      <AccordionItem uuid='table_of_contents'>\n        <AccordionItemHeading className=\"heading large-heading-size\">\n          <AccordionItemButton>\n            {props.teacher.teaching.displayNameSingular + ' Teachings'}\n          </AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n          <TableOfContentsView methods={props.teacher.teaching.methods} teachingName={props.teacher.teaching.objectName} />\n          <br />\n          <div className='center-text text-margins'>\n            <AdView />\n          </div>\n          <br />\n        </AccordionItemPanel>\n      </AccordionItem>\n    </span>\n  )\n}\nexport default TOCAccordianItem","import React, { Suspense, useState, useEffect } from 'react';\nimport { Accordion, AccordionItem, AccordionItemButton, AccordionItemHeading, AccordionItemPanel } from 'react-accessible-accordion'\nimport { getTeacher } from '../store/Actions';\n//import isMobile from '../utilities/IsMobile';\nimport UncreatedTeachingView from '../components/teaching-views/UncreatedTeachingView'\nimport AdView from '../components/AdView';\nimport ProblemPicker from '../components/teaching-views/ProblemPicker'\nimport TOCAccordianItem from '../components/teaching-views/TOCAccordianItem'\nimport '../styles/app.css'\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux'\n\n//initial page for a topic\nconst TeachingPage = (props) => {\n  \n  let jwt = useSelector(state => state.auth.jwt)\n\n  //state\n  const { match: { params } } = props;\n  const [teacher, setTeacher] = useState(undefined);\n  getTeacher(params.teachingName, setTeacher)\n\n  //update recents if jwt is valid\n  useEffect(() => {\n    if (teacher&&params.teachingName!=='false') {\n      console.log()\n      fetch(`http://localhost:9000/teachings/${params.teachingName}`, {method: 'POST', \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({jwt: jwt})}).then(\n        res => res.json()\n      ).then(\n        data =>console.log(data)\n      ).catch(\n        err => console.log(err)\n      )\n    }\n  }, [teacher, params.teachingName, jwt])\n\n  const AboutComponent = React.lazy(() => import(`../components/about-views/About${params.teachingName}`));\n\n  if (teacher) {\n    document.title = params.teachingName;\n    return (\n      <main>\n        {/* title and ad */}\n        <h1 className='large-left-margin'>\n          {teacher.teaching.displayNamePlural}\n        </h1>\n        <div className='center-text text-margins'>\n          <AdView />\n        </div>\n        {/* accordian for about, teachings, and problems */}\n        <Accordion allowZeroExpanded={true} allowMultipleExpanded={true} preExpanded={[]}>\n          {/* about and ad */}\n          <span>\n            <AccordionItem uuid='about'>\n              <AccordionItemHeading className=\"heading large-heading-size\">\n                <AccordionItemButton>\n                  {\"About \" + teacher.teaching.displayNamePlural}\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <Suspense fallback={<div>Loading {teacher.teaching.displayNameSingular} Teaching...</div>}>\n                  <AboutComponent />\n                </Suspense>\n                <div className='text-margins float-right'>\n                  <Link to={`./${teacher.teaching.objectName}/${teacher.teaching.methods[0][1]}`} className='link-heading'>Next</Link>\n                </div>\n                <br />\n                <br />\n                <br />\n                <div className='center-text text-margins'>\n                  <AdView />\n                </div>\n                <br />\n              </AccordionItemPanel>\n            </AccordionItem>\n          </span>\n          {/* teaching links and ad */}\n          <TOCAccordianItem teacher={teacher} />\n          {/* problem links and ad */}\n          <span>\n            <AccordionItem uuid={'problems'}>\n              <AccordionItemHeading className=\"heading large-heading-size\">\n                <AccordionItemButton>\n                  {teacher.teaching.displayNameSingular + \" Problems\"}\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <ProblemPicker teachingName={params.teachingName} />\n                <div className='center-text text-margins'><AdView /></div>\n              </AccordionItemPanel>\n            </AccordionItem>\n          </span>\n        </Accordion>\n        <div>\n          <Link to={`./${teacher.teaching.objectName}/${teacher.teaching.methods[0][1]}`} className='link-heading text-margins float-right'>Next</Link>\n        </div>\n        {/* line breaks to add space to bottom */}\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </main>\n    );\n  } else if (teacher === false) {\n    //teacher is false is getLesson set it so if it failed to retrive the teacher\n    return (\n      <main>\n        <UncreatedTeachingView className='center-text' />\n      </main>\n    )\n  } else {\n    return null\n  }\n  //for accordian\n  /*\n  function expandTheseIfNotMobile() {\n    if (!isMobile()) {\n      return ['problems', 'about', 'table_of_contents'];\n    } else {\n      return [];\n    }\n  }\n  */\n}\nexport default TeachingPage;\n","import React from 'react'\nimport MathJax from 'react-mathjax'\n\n// the view where the solving is displayed\nconst LessonView = (props) => {\n\n  //render the lesson\n  return (\n    <div>\n      {createSolveView()}\n    </div>\n  )\n\n  //create the view\n  function createSolveView() {\n    if (props.teacher) {\n      return (\n        <div>\n          {/*the heading*/}\n          <h1 className='large-left-margin'>\n            {props.teacher.teaching.displayNameSingular} {props.type}: {getMethodName()}\n          </h1>\n          {/*display the lesson of the method*/}\n          <div className='text-margins'>\n            {teachLesson()}\n          </div>\n        </div>\n      )\n    }\n  }\n  //get the display name\n  function getMethodName() {\n    let methodName = \"\"\n    props.teacher.teaching.methods.forEach(method => {\n      if (method[1] === props.params.method) {\n        methodName = method[0]\n      }\n    })\n    return methodName\n  }\n\n  //create the display of the lesson\n  function teachLesson() {\n    let teachingDisplay = []\n    //create lesson for method with arguments\n    for (let i = 0; i < props.lesson.length; i++) {\n      //create concept\n      for (let j = 0; j < props.lesson[i].length; j++) {\n        //create segments to build concept\n        teachingDisplay.push(handleSegment(props.lesson[i][j], i + '-' + j));\n      }\n    }\n    return teachingDisplay;\n  }\n\n  //create an individual segment for a concept\n  function handleSegment(segment, key) {\n      if (segment.startsWith('{h}')) {\n        return (\n          <span>\n            <br/>\n            <br/>\n            <hr/>\n          <h1 key={key} className=\"large-left-margin\">\n            {segment.slice(3)}\n          </h1>\n          </span>\n        )\n      } else if (segment.startsWith('{br}')) {\n        return (\n          <div key={key} >\n            <br />\n          </div>);\n      } else if (segment.startsWith('{str}')) {\n        return (\n          <span key={key} className=\"main-text-color heading\">\n            {segment.slice(5)}\n          </span>);\n      } else if (segment.startsWith('{$il}')) {\n        const math = segment.split('{$il}')\n        return (\n          <span aria-label={math[2]} key={key}>\n            <MathJax.Provider input=\"tex\" >\n              <MathJax.Node inline aria-hidden='true' className='heading' formula={`\\\\color{white}{${math[1]}}`} />\n            </MathJax.Provider>\n          </span>\n        )\n      } else if (segment.startsWith('{$bl}')) {\n        const math = segment.split('{$bl}')\n        return (\n          <span aria-label={math[2]} key={key}>\n            <MathJax.Provider input=\"tex\" >\n              <MathJax.Node aria-hidden='true' className='heading' formula={`\\\\color{white}{${math[1]}}`} />\n            </MathJax.Provider>\n          </span>\n        )\n      }\n    }\n}\n\nexport default LessonView","import React, { useState, useEffect } from 'react'\nimport { getTeacher } from '../../store/Actions'\nimport LessonView from './LessonView'\nimport { useSelector } from 'react-redux'\n\n// the view where the solving is displayed\nconst SolveView = (props) => {\n\n  let jwt = useSelector(state => state.auth.jwt)\n\n  //set-up state\n  const [teacher, setTeacher] = useState(undefined);\n  //get the teacher\n  getTeacher(props.params.teachingName, setTeacher)\n  const [lesson, setLesson] = useState([])\n\n  //get the lesson\n  useEffect(() => {\n    if (teacher !== undefined) {\n      if (typeof teacher[props.params.method] === 'function') {\n        teacher.goodInput=false\n        setLesson(teacher[props.params.method](props.params.parameters.split('@')))\n      }\n    }\n  }, [teacher, props.params.method, props.params.parameters])\n\n  //too update recents if jwt was valid\n  useEffect(() => {\n    if (teacher!==undefined&&teacher.goodInput&&props.params.teachingName!=='false'){\n      let unescapedArgs=props.params.parameters\n      unescapedArgs=unescapedArgs.split('@')\n      let escapedArgs=''\n      for (let i=1; i<unescapedArgs.length; i++){\n        escapedArgs+=`%40${unescapedArgs[i]}`\n      }\n      fetch(`http://localhost:9000/teachings/${\n        props.params.teachingName}/${\n        props.params.method}/${escapedArgs}`, {method: 'POST', \n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({jwt: jwt})}\n        ).then(\n        res => res.json()\n      ).then(\n        data =>console.log(data)\n      ).catch(\n        err => console.log(err)\n      )\n    }\n  }, [lesson, teacher, props.params, jwt])\n\n  //render the lesson\n  return (\n    <div>\n      <LessonView params={props.params} teacher={teacher} lesson={lesson} type=\"Solution\"/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n    </div>\n  )\n\n}\n\nexport default SolveView","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SolveView from '../components/teaching-views/SolveView'\nimport AdView from '../components/AdView'\n//Page for solving a problem\nconst SolvePage = (props) => {\n  const { match: { params } } = props;\n  //set page title\n  document.title=params.teachingName+\" Problem\"\n  return (\n    <main>\n      {/*a back link or nothing*/}\n      {createBackLink()}\n      {/* an ad */}\n      {createSpacer()}\n      <div className='center-text text-margins'><AdView /></div>\n      {/*the view where the actual solving is displayed*/}\n      <SolveView params={params}/>\n    </main>\n  )\n  //if there is a valid location to go back to, it will be described in this link\n  function createBackLink(){\n    if (props.location.state && props.location.state.from) {\n      if (props.location.state.from===\"EnterProblemsPage\"){\n        return (\n          <h1 className='large-left-margin'>\n            <Link to={`../../../EnterProblems/${params.teachingName}`} className='link-heading'>\n              Go to {params.teachingName}'s Enter Problem Page\n            </Link>\n          </h1>\n        )\n      } else if (props.location.state.from===\"teachings\"){\n        return (\n          <h1 className='large-left-margin'>\n            <Link to={`../../../teachings/${params.teachingName}/${params.method}`} className='link-heading'>\n              Back to Teaching\n            </Link>\n          </h1>\n        ) \n      }\n    }\n  }\n\n  //spacer for if no back button is present\n  function createSpacer() {\n    if (!(props.location.state && props.location.state.from)) {\n      return (\n        <div>\n          <br></br>\n          <br></br>\n        </div>\n      )\n    }\n  }\n}\nexport default SolvePage","import React, { useState, useEffect } from 'react'\nimport { getTeacher } from '../../store/Actions'\nimport LessonView from './LessonView'\nimport { useSelector } from 'react-redux'\n\n// the view where the solving is displayed\nconst SolveView = (props) => {\n\n  let jwt = useSelector(state => state.auth.jwt)\n\n  //set-up state\n  const [teacher, setTeacher] = useState(undefined);\n  //get the teacher\n  getTeacher(props.params.teachingName, setTeacher)\n  const [lesson, setLesson] = useState([])\n\n  //get the lesson\n  useEffect(() => {\n    if (teacher !== undefined && teacher!==false&&props.params.teachingName!==false) {\n      if (typeof teacher[props.params.method] === 'function') {\n        setLesson(teacher[props.params.method]())\n        fetch(`http://localhost:9000/teachings/${\n        props.params.teachingName}/${\n        props.params.method}`, {method: 'POST', \n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({jwt: jwt})}).then(\n        res => res.json()\n      ).then(\n        data =>console.log(data)\n      ).catch(\n        err => console.log(err)\n      )\n      }\n    }\n  }, [teacher, props.params.method, props.params.parameters, \n    props.params.teachingName, jwt])\n\n  //render the lesson\n  return (\n    <div>\n      <LessonView params={props.params} teacher={teacher} lesson={lesson} type=\"Teaching\"/>\n      <br/>\n    </div>\n  )\n\n}\n\nexport default SolveView\n\n/*\n<Accordion allowZeroExpanded={true} allowMultipleExpanded={true} preExpanded={[]}>\n      <AccordionItem uuid='about'>\n        <AccordionItemHeading className=\"heading large-heading-size\">\n          <AccordionItemButton>\n            {teacher.teaching.displayNameSingular} Teaching: {getMethodName()}\n          </AccordionItemButton>\n        </AccordionItemHeading>\n        <AccordionItemPanel>\n            <LessonView params={props.params} teacher={teacher} lesson={lesson} type=\"Teaching\"/>\n            <br/>\n            <br/>\n            <div className='center-text text-margins'>\n              <AdView />\n            </div>\n        </AccordionItemPanel>\n      </AccordionItem>\n    </Accordion>\n*/","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TeachView from '../components/teaching-views/TeachView'\nimport MethodView from '../components/teaching-views/MethodView'\nimport AdView from '../components/AdView'\nimport { getTeacher } from '../store/Actions';\nimport UncreatedTeachingView from '../components/teaching-views/UncreatedTeachingView'\nimport TOCAccordianItem from '../components/teaching-views/TOCAccordianItem'\nimport { Accordion } from 'react-accessible-accordion';\n\n//Page for solving a problem\nconst MethodPage = (props) => {\n  const { match: { params } } = props;\n  //set page title\n  document.title = params.teachingName + \" Problem Teaching\"\n  \n  const [teacher, setTeacher] = useState(undefined);\n  getTeacher(params.teachingName, setTeacher)\n  if (teacher && getMethodIndex()!==-1) {\n    return (\n      <main>\n        {/*a back link or nothing*/}\n        {createBackLink()}\n        {/* an ad */}\n        <div className='center-text text-margins'>\n          <AdView />\n        </div>\n        <div>\n          <TeachView params={params}/>\n        </div>\n        <br/>\n        <div className='center-text text-margins'>\n          <AdView />\n        </div>\n        <h1 className='large-left-margin'>Try It Out:</h1>\n        <MethodView teacher={teacher} method={getMethod()} from='teachings' params={params}/>\n        <br/>\n        <br/>\n        <div>\n          {providePreviousLink()}\n          {provideNextLink()}\n        </div>\n        <br/>\n        <br/>\n        <Accordion allowZeroExpanded={true}>\n          <TOCAccordianItem teacher={teacher} />\n        </Accordion>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </main>\n    )\n  } else if (teacher === false || getMethodIndex()===-1) {\n    return (\n      <main>\n        <UncreatedTeachingView className='center-text' />\n      </main>\n    )\n  } else {\n    return null\n  }\n  //if there is a valid location to go back to, it will be described in this link\n  function createBackLink() {\n    return (\n      <h1 className='large-left-margin'>\n        <Link to={`../../teachings/${params.teachingName}`} className='link-heading'>\n          Go to {params.teachingName}'s  Page\n        </Link>\n      </h1>\n    )\n  }\n\n  function getMethod() {\n    return teacher.teaching.methods.find(\n      method => {\n        return method[1] === params.method \n      }\n    )\n  }\n  function getMethodIndex(){\n    if (teacher===undefined || teacher===false) {\n      return -1\n    }\n    return teacher.teaching.methods.findIndex(\n      method => {\n        return method[1] === params.method \n      }\n    )\n  }\n  function providePreviousLink(){\n    if (getMethodIndex()===-1) {\n      return null\n    } else if (getMethodIndex()===0) {\n      return (\n      <Link to={`../${teacher.teaching.objectName}`} className='text-margins link-heading float-left'>\n        Previous\n      </Link>\n      )\n    } else {\n      return (\n      <Link to={`../${teacher.teaching.objectName}/${teacher.teaching.methods[getMethodIndex()-1][1]}`} className='text-margins link-heading float-left'>\n        Previous\n      </Link>\n      )\n    }\n  }\n  function provideNextLink(){\n    if (getMethodIndex()===teacher.teaching.methods.length-1) {\n      return (\n        null\n      )\n    } else {\n      return (\n      <Link to={`../${teacher.teaching.objectName}/${teacher.teaching.methods[getMethodIndex()+1][1]}`} className='text-margins link-heading float-right'>\n        Next\n      </Link>\n      )\n    }\n  }\n}\nexport default MethodPage","import React from 'react'\n\nconst TeachingRecentView = (props) => {\n  return (\n    <span>\n      <h1 className='heading text-margins'>Teaching</h1>\n      <a href={`../teachings/${props.teachingName}`} className='link-heading text-margins'>\n        {props.teachingName} Teaching's Page\n      </a>\n      <br />\n      <br />\n      <hr className='text-margins' />\n    </span>\n  )\n}\n\nexport default TeachingRecentView","import React, { useState } from 'react'\nimport {getTeacher} from '../../store/Actions'\n\nconst MethodRecentView = (props) => {\n  const [teacher, setTeacher]=useState(undefined)\n  getTeacher(props.teachingName, setTeacher)\n  if (teacher&&getMethodIndex!==-1){\n  return (\n    <span>\n      <h1 className='heading text-margins'>Teaching</h1>\n      <span className='text-margins'>\n        <span className='big-heading'>{props.teachingName} Teaching: </span>\n        <a href={`../teachings/${props.teachingName}/${props.method}`} className='link-heading'>\n           {getMethod()[0]}\n        </a>\n      </span>\n      <br />\n      <br />\n      <hr className='text-margins' />\n    </span>\n  )\n  } else {\n    return null\n  }\n\n  function getMethod() {\n    return teacher.teaching.methods.find(\n      method => {\n        return method[1] === props.method \n      }\n    )\n  }\n  function getMethodIndex(){\n    if (teacher===undefined || teacher===false) {\n      return -1\n    }\n    return teacher.teaching.methods.findIndex(\n      method => {\n        return method[1] === props.method \n      }\n    )\n  }\n}\n\nexport default MethodRecentView","import React, { useState } from 'react'\nimport {getTeacher} from '../../store/Actions'\nimport MathJax from 'react-mathjax'\n\nconst MethodRecentView = (props) => {\n  const [teacher, setTeacher]=useState(undefined)\n  getTeacher(props.teachingName, setTeacher)\n  if (teacher&&getMethodIndex!==-1){\n  const problemStrings=teacher[`${props.method}Problem`](props.arguments).split('{$bl}')\n  return (\n    <span>\n      <h1 className='heading text-margins'>Problem</h1>\n      <span className='text-margins'>\n        <span className='big-heading'>{props.teachingName} Problem: </span>\n        <a href={`../teachings/${props.teachingName}/${props.method}/${props.arguments}`} className='link-heading'>\n          {getMethod()[0]}\n        </a>\n      </span>\n      <span aria-label={problemStrings[2]}>\n      <MathJax.Provider input=\"tex\" >\n        <MathJax.Node aria-hidden='true' className='heading' formula={`\\\\color{white}{${problemStrings[1]}}`} />\n      </MathJax.Provider>\n      </span>\n      <br />\n      <br />\n      <hr className='text-margins' />\n    </span>\n  )\n  } else {\n    return null\n  }\n\n  function getMethod() {\n    return teacher.teaching.methods.find(\n      method => {\n        return method[1] === props.method \n      }\n    )\n  }\n  function getMethodIndex(){\n    if (teacher===undefined || teacher===false) {\n      return -1\n    }\n    return teacher.teaching.methods.findIndex(\n      method => {\n        return method[1] === props.method \n      }\n    )\n  }\n}\n\nexport default MethodRecentView","import React, { useEffect, useState } from 'react';\nimport TeachingRecentView from '../components/teaching-views/TeachingRecentView'\nimport MethodRecentView from '../components/teaching-views/MethodRecentView'\nimport ProblemRecentView from '../components/teaching-views/ProblemRecentView'\nimport { useSelector } from 'react-redux'\n\n//display recents if logged in if there are any\nconst RecentsPage = () => {\n\n  document.title = 'Recents'\n  let jwt = useSelector(state => state.auth.jwt)\n  let email = useSelector(state => state.auth.email)\n\n  let [loggedIn, setLoggedIn] = useState(false)\n\n  const [recents, setRecents] = useState([])\n  useEffect(() => {\n    fetch(`http://localhost:9000/recents`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ jwt: jwt })\n    }).then(\n      res => res.json()\n    ).then(\n      data => {\n        if (data.error) {\n          setLoggedIn(false)\n        } else {\n          console.log('logged in. should see recents')\n          setLoggedIn(true)\n          setRecents(data.pages)\n          console.log(data.pages)\n        }\n      }\n    ).catch(\n      err => console.log(err)\n    )\n  }, [jwt])\n\n  return (\n    <span>\n      <h1 className='large-left-margin'>Recents {showEmail()}</h1>\n      <hr className='text-margins' />\n      {generateRecents()}\n      <br />\n      <br />\n      <br />\n      <br />\n    </span>\n  )\n\n  function showEmail(){\n    if (loggedIn) {\n      if (email!==undefined&&email!==null&&email!=='null'){\n        return `for ${email}`\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  }\n\n  function generateRecents() {\n    if (loggedIn) {\n      if (recents==null || recents.length===0){\n        return <h1 className='heading text-margins'>Please visit some teachings or problems to save them to recents.</h1>\n      }\n      return recents.map((recent) => {\n        if (recent.method == null && recent.teachingName !== null) {\n          //teaching view is just a link to the teaching\n          return <TeachingRecentView teachingName={recent.teachingName} key={recent.teachingName} />\n        } else if (recent.arguments == null && recent.teachingName !== null && recent.method !== null) {\n          //method view is a link to the teaching's method\n          return <MethodRecentView teachingName={recent.teachingName} method={recent.method}\n            key={`${recent.teachingName}-${recent.method}`} />\n        } else if (recent.arguments !== null && recent.teachingName !== null && recent.method !== null) {\n          //problem view is a link to a problem, with a mathjax description of the problem\n          return <ProblemRecentView teachingName={recent.teachingName} method={recent.method}\n            arguments={recent.arguments} key={`${recent.teachingName}-${recent.method}-${recent.arguments}`} />\n        } else {\n          return <span></span>\n        }\n      })\n    } else {\n      return <h1 className='heading text-margins'>You must login to see your recents.</h1>\n    }\n  }\n\n\n}\nexport default RecentsPage","import React, { useState } from 'react';\nimport {useHistory } from 'react-router-dom';\nimport {useDispatch} from 'react-redux'\nimport {storeJWT, storeEmail} from '../store/AuthReducer'\n\n//view for logging in\nconst LoginView = () => {\n  //for navigation on success\n  const history=useHistory()\n  const dispatch=useDispatch()\n  //state\n  const [email, setEmail]=useState(\"\")\n  const [password, setPassword]=useState(\"\")\n  return (\n      <div className='center-text'>\n        {/* email field */}\n        <label htmlFor='Email Input' className='heading'>Email:</label>\n        <input id='Email Input' className='userInfoInput small-left-margin'\n        value={email} onChange={(event)=>{setEmail(event.target.value)}}/>\n        <br/>\n        <br/>\n        {/* password field */}\n        <label htmlFor='Password Input' className='heading'>Password:</label>\n        <input type='password' id='Password Input' className='userInfoInput small-left-margin'\n        value={password} onChange={(event)=>{setPassword(event.target.value)}}/>\n        <br/>\n        <br/>\n        {/* login button */}\n        <button onClick={login} className=\"link\">\n          Login\n        </button>\n      </div>\n  )\n\n  /* try to login at endpoint /login */\n  function login(){\n    if (email===null ||email===undefined||email===\"\"){\n      window.alert(\"Email must not be blank\")\n      return\n    }\n    if (password===null ||password===undefined||password===\"\"){\n      window.alert(\"Passwords must not be blank\")\n      return\n    }\n    fetch(`http://localhost:9000/login`, {method: 'POST', \n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email: email, password: password})}\n    ).then(\n      res => res.json()\n    ).then(\n      data =>  {\n        if (data.error){\n          window.alert(\"Invalid email or password\")\n        } else {\n          //if login was successfull, store jwt and email\n          dispatch(storeJWT(data.jwt))\n          dispatch(storeEmail(data.email))\n          history.push('/')\n        }\n    }\n    ).catch(\n      err => console.log(err)\n    )\n  }\n}\n\nexport default LoginView","import React from 'react';\nimport { Link} from 'react-router-dom';\nimport LoginView from '../components/LoginView'\n\n//main login page\nconst LoginPage = () => {\n  document.title='Login'\n  return (\n    <main>\n      {/* login for returning users */}\n      <h1 className='center-text'>Returning User?  Log in to Math Student</h1>\n      <LoginView/>\n      {/* link to sign up page for new users */}\n      <h2 className='center-text'>Or</h2>\n      <h1 className='center-text'>New User? Create an Account</h1>\n      <h2 className='center-text'>Don't have an account?  Click the link below to create one:</h2>\n      <div className='center-text'>\n        <Link to=\"/createAccount\" className=\"link\">\n          Create Account\n        </Link>\n      </div>\n      {/* spacers at bottom */}\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n    </main>\n  )\n}\n\nexport default LoginPage","import React, { useState } from 'react';\nimport {useHistory } from 'react-router-dom';\n\n//create an account on this page\nconst SignUpPage = () => {\n  //so we can navigate to welcome page on successfull account creation\n  const history=useHistory()\n  document.title='Create Account'\n  //state for our three fields\n  const [email, setEmail]=useState(\"\")\n  const [password, setPassword]=useState(\"\")\n  const [confirmPassword, setConfirmPassword]=useState(\"\")\n  return (\n    <main>\n      {/* title */}\n      <h1 className='center-text'>Create an Account</h1>\n      {/* fields */}\n      <div className='center-text'>\n        {/* email */}\n        <label htmlFor='Email Input' className='heading'>Email:</label>\n        <input id='Email Input' className='userInfoInput small-left-margin' \n        onChange={(event)=>{setEmail(event.target.value)}}/>\n        <br />\n        <label className='heading'></label>\n        <br />\n        <br />\n        {/* password */}\n        <label htmlFor='Password Input' className='heading'>Password:</label>\n        <input type='password' id='Password Input' className='userInfoInput small-left-margin'\n        onChange={(event)=>{setPassword(event.target.value)}}/>\n        <br />\n        <label className='heading'></label>\n        <br />\n        <br />\n        {/* confirm password */}\n        <label htmlFor='Confirm Password Input' className='heading'>Confirm Password:</label>\n        <input type='password' id='Confirm Password Input' className='userInfoInput small-left-margin' \n        onChange={(event)=>{setConfirmPassword(event.target.value)}}/>\n        <br />\n        <label className='heading'></label>\n        <br />\n        <br />\n        {/* try to sign up */}\n        <button onClick={signUp} className=\"link\">\n          Sign up\n        </button>\n      </div>\n      {/* spacers at bottom of page */}\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n    </main>\n  )\n\n  //if all looks good, send a post to /createAccount API endpoint\n  function signUp(){\n    if (email===null ||email===undefined||email===\"\"){\n      window.alert(\"Email must not be blank\")\n      return\n    }\n    if (password===null ||password===undefined||password===\"\"){\n      window.alert(\"Passwords must not be blank\")\n      return\n    }\n    if (password!==confirmPassword){\n      window.alert(\"Passwords must match\")\n      return\n    }\n    fetch(`http://localhost:9000/createAccount`, {method: 'POST', \n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email: email, password: password})}\n    ).then(\n      res => res.json()\n    ).then(\n      data =>  {\n        /* if email is taken, tell the user */\n        if (data.emailTaken){\n          window.alert(\"Sorry, but that email is already taken.\")\n        } else {\n          /* if all good, take user to first time login page */\n          history.push('/firstTimeLogin')\n        }\n    }\n    ).catch(\n      err => console.log(err)\n    )\n  }\n}\n\nexport default SignUpPage","import React from 'react';\nimport LoginView from '../components/LoginView'\n\n//main login page\nconst FirstTimeUserLoginPage = () => {\n  document.title='Login'\n  return (\n    <main>\n      {/* login for new users */}\n      <h1 className='center-text'>Log in to Math Teacher with Your New Account!</h1>\n      <LoginView/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      </main>\n  )\n}\n\nexport default FirstTimeUserLoginPage","import React, { useEffect } from 'react';\nimport {useDispatch} from 'react-redux'\nimport {clearJWT, clearEmail} from '../store/AuthReducer'\n//import LoginView from '../components/LoginView'\n//page that just thanks the user for using Math Teacher\nconst GoodByePage = () => {\n  let dispatch=useDispatch()\n\n  useEffect(()=>{dispatch(clearJWT())\n    dispatch(clearEmail())}, [dispatch])\n\n  return (\n    <span>\n      <h1 className='center-text'>Thank you for using Math Teacher.</h1>\n      <h2 className='center-text heading'>You are now logged out</h2>\n      {/*<h1 className='center-text'>Want to sign in again?</h1>\n      <LoginView/>*/}\n    </span>\n  )\n}\nexport default GoodByePage","//react and react-router-dom\nimport React from 'react';\nimport {HashRouter, Route, Switch } from 'react-router-dom'\n//components\nimport Header from './components/Header'\nimport ScrollToTop from './components/ScrollToTop'\n//pages\nimport VersionPage from './pages/VersionPage'\nimport HomePage from './pages/HomePage'\nimport CurriculumPage from './pages/CurriculumPage'\nimport PageNotFoundPage from './pages/PageNotFoundPage'\nimport EnterProblemsPage from './pages/EnterProblemsPage'\nimport GenerateProblemsPage from './pages/GenerateProblemsPage'\nimport TeachingPage from './pages/TeachingPage'\nimport SolvePage from './pages/SolvePage'\nimport MethodPage from './pages/MethodPage'\nimport RecentsPage from './pages/RecentsPage'\nimport LoginPage from './pages/LoginPage'\nimport SignUpPage from './pages/SignUpPage'\nimport FirstTimeUserLoginPage from './pages/FirstTimeUserLoginPage'\nimport GoodByePage from './pages/GoodByePage'\n\n//router for entire app\nconst AppRouter = () => (\n  <HashRouter>\n    {/* links */}\n    <Header />\n    {/* scrolls to top on navigation */}\n    <ScrollToTop />\n    <Switch>\n      {/* home page */}\n      <Route path=\"/\" exact component={HomePage} />\n      {/* all the curriculum */}\n      <Route path=\"/curriculum\" exact component={CurriculumPage} />\n      {/* let's user know what version is chached by the service worker */}\n      <Route path=\"/version\" exact component={VersionPage} />\n      {/* for solving a problem */}\n      <Route path='/solve/:teachingName/:method/:parameters' exact component={SolvePage} />\n      {/* enter a problem for this topic */}\n      <Route path=\"/EnterProblems/:teachingName\" exact component={EnterProblemsPage} />\n      {/* genrate problems for this topic */}\n      <Route path=\"/GenerateProblems/:teachingName\" exact component={GenerateProblemsPage} />\n      {/* about topic, teaching table of contents, and problem links for this topic */}\n      <Route path=\"/teachings/:teachingName\" exact component={TeachingPage} />\n      {/* teaching about a method */}\n      <Route path=\"/teachings/:teachingName/:method\" exact component={MethodPage} />\n      {/* or solving a problem, again */}\n      <Route path='/teachings/:teachingName/:method/:parameters' exact component={SolvePage} />\n      {/* history from Math Teacher displayed */}\n      <Route path='/recents' exact component={RecentsPage} />\n      {/* page for logging in with link to page for creating account */}\n      <Route path='/login' exact component={LoginPage} />\n      {/* page for logging for the first time */}\n      <Route path='/firstTimeLogin' exact component={FirstTimeUserLoginPage} />\n      {/* page for creating an account */}\n      <Route path='/createAccount' exact component={SignUpPage} />\n      {/* page for thanking the user for using MathTeacher */}\n      <Route path='/logout' exact component={GoodByePage} />\n      {/* if you don't match the route */}\n      <Route component={PageNotFoundPage} />\n    </Switch>\n  </HashRouter>\n);\nexport default AppRouter;","import NameCodePair from '../utilities/NameCodePair';\nconst teachings=\n[ new NameCodePair('Fractions', 'Fraction')/*, new NameCodePair('Lines', 'LineIn2D'), \nnew NameCodePair('Circles', 'CircleIn2D') */];\nexport default teachings;","import teachings from  '../model/Teachings'\nimport curriculum from '../model/Curriculum'\n\nconst initialState = {\n    topics: teachings, curriculum: curriculum, pageNotFound: false, teacher: undefined\n};\n\nexport default function teachingReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_TEACHER': {\n            if (action.payload === undefined) {\n                console.log('teaching was null');\n                return { ...state, pageNotFound: true };\n            }\n            return { ...state, teacher: action.payload, pageNotFound: false };\n        }\n        default: return state;\n    }\n};","import NameCodePair from '../utilities/NameCodePair';\nimport Course from './Course';\nconst curriculum=\n[new Course(\n    \"Arithemetic\", [ new NameCodePair('Fractions', 'Fraction')\n    /*, new NameCodePair('Lines', 'LineIn2D'), \nnew NameCodePair('Circles', 'CircleIn2D') */])];\nexport default curriculum;","class Course {\n    name=''\n    topics=[]\n    constructor(name, topics){\n        this.name=name\n        this.topics=topics\n    }\n}\nexport default Course","\nimport { combineReducers } from 'redux';\nimport auth from './AuthReducer'\nimport teaching from './TeachingReducer'\nexport default combineReducers({\n  auth,\n  teaching\n})","import { createStore, applyMiddleware } from \"redux\";\nimport AppReducer from './AppReducer';\nimport thunk from 'redux-thunk';\nconst mainStore=() => {\n    return createStore(AppReducer, applyMiddleware(thunk));\n};\nexport default mainStore;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport AppRouter from './AppRouter';\nimport teachingStore from './store/TeachingsStore';\n//get the store, pass it to the provider and make the App Router\n//App Router handles switching between links and urls\nconst App = () => {\n    return (\n    <Provider store={teachingStore()}>\n        <AppRouter/>\n    </Provider>\n    );\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import * as homeWorker from './serviceWorker';\nimport App from './App'\nimport './styles/app.css';\nimport './styles/index.css';\n\n//render App\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n/*\nProgressive Web App (PWA) --for users to download update, \nmust make a change in home worker file\n*/\n//homeWorker.register();\n"],"sourceRoot":""}